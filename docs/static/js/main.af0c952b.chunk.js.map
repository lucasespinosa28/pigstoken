{"version":3,"sources":["logo.svg","mintKing.js","mintSoldier.js","transferKing.js","transferSoldier.js","App.js","reportWebVitals.js","index.js"],"names":["abi","utils","Interface","ERC20Interface","kingContract","Contract","MintKing","account","hash","useContractFunction","send","state","receipt","transactionHash","className","onClick","href","target","soldierContract","MintSoldier","console","log","Transferking","balance","useState","Amount","setAmount","Receiver","setReceiver","id","type","placeholder","onChange","e","value","recipient","amount","toString","TransSoldier","class","DisplaySoldier","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","App","useEthers","activateBrowserWallet","kingBalance","useTokenBalance","soldierBalance","parseInt","formatUnits","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","readOnlyChainId","ChainId","Kovan","readOnlyUrls","ReactDOM","render","StrictMode","DAppProvider","document","getElementById"],"mappings":"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","file":"static/js/main.af0c952b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useContractFunction} from '@usedapp/core';\nimport React, { useState } from \"react\";\nimport ERC20Interface from './tokenAbi.json';\nimport { utils } from 'ethers'\nimport { Contract } from '@ethersproject/contracts'\n\n\nconst kingAddress = '0xC19Dd8094B73999dB263b27474127E990ccC03e6'\nconst abi = new utils.Interface(ERC20Interface)\nconst kingContract = new Contract(kingAddress, abi)\nconst MintKing = (account) => { \n  const { send , state} = useContractFunction(kingContract, 'mintMinerReward')\n  var hash\n  if(state.receipt){\n    hash = state.receipt.transactionHash\n  }\n  \n  return <div className=\"row\">\n     <div className=\"col-auto\">\n         <h3>Mint a new token XPK,after minting the unit will show a king pig </h3>\n     </div>\n     <div className=\"col-auto\">\n     {account && <button className=\"btn btn-primary mb-3\" onClick={() =>{send()}}>Mint king</button>}\n     </div>\n     <div className=\"col-auto\">\n      {hash && <a href={\"https://kovan.etherscan.io/tx/\"+hash} target=\"_blank\">{hash}</a>}\n     </div>\n   </div>\n}\nexport default MintKing;\n","import { useContractFunction} from '@usedapp/core';\nimport React, { useState } from \"react\";\nimport ERC20Interface from './tokenAbi.json';\nimport { utils } from 'ethers'\nimport { Contract } from '@ethersproject/contracts'\n\n\nconst soldierAddress = '0xC31Fe56810809199B28384e9E6bFfcbB2a31339c'\nconst abi = new utils.Interface(ERC20Interface)\nconst soldierContract = new Contract(soldierAddress, abi)\nconst MintSoldier = (account) => { \n  const { send,state } = useContractFunction(soldierContract, 'mintMinerReward')\n  var hash\n  if(state.receipt){\n    hash = state.receipt.transactionHash\n  }\n  \n  console.log(hash)\n   return <div className=\"row\">\n   <div className=\"col-auto\">\n     <h3>Mint a new token XPS,after minting the unit will show a soldier pig </h3>\n   </div>\n   <div className=\"col-auto\">\n     {account && <button className=\"btn btn-primary mb-3\" onClick={() =>{send()}}>Mint Soldier</button>}\n   </div>\n   <div className=\"col-auto\">\n    {hash && <a href={\"https://kovan.etherscan.io/tx/\"+hash} target=\"_blank\">{hash}</a>}\n   </div>\n </div>\n    \n}\nexport default MintSoldier;\n","import React, { useState } from \"react\";\nimport { useContractFunction} from '@usedapp/core';\nimport ERC20Interface from './tokenAbi.json';\nimport { utils } from 'ethers'\nimport { Contract } from '@ethersproject/contracts'\n\n\nconst kingAddress = '0xC19Dd8094B73999dB263b27474127E990ccC03e6'\nconst abi = new utils.Interface(ERC20Interface)\nconst kingContract = new Contract(kingAddress, abi)\nconst Transferking = (account,balance) => { \n  const { send } = useContractFunction(kingContract, 'transfer')\n  const [Amount, setAmount] = useState(\"\")\n  const [Receiver , setReceiver] = useState(\"\")\n  const sendTransfer = (recipient,amount) => {\n    amount = amount*1e18\n    if(amount <= account.balance){\n      send(recipient,amount.toString())\n    }\n  }\n\n  return <div className=\"row g-3\">\n  <div className=\"col-auto\">\n    <input  className=\"form-control\" id=\"InputSoldierAmount\" type=\"number\"  placeholder=\"Amount\" onChange={e => setAmount(e.target.value)} ></input>\n  </div>\n  <div className=\"col-auto\">\n    <input  className=\"form-control\" id=\"SendSoldierAddress\" type=\"text\"   placeholder=\"Receiver address\" onChange={e => setReceiver(e.target.value)} ></input>\n  </div>\n  <div className=\"col-auto\">\n    {account && <button className=\"btn btn-success mb-3\" onClick={() => sendTransfer(Receiver,Amount)}>Transfer</button>}\n  </div>\n</div>\n    \n}\nexport default Transferking;\n","import React, { useState } from \"react\";\nimport { useContractFunction} from '@usedapp/core';\nimport ERC20Interface from './tokenAbi.json';\nimport { utils } from 'ethers'\nimport { Contract } from '@ethersproject/contracts'\n\n\nconst soldierAddress = '0xC31Fe56810809199B28384e9E6bFfcbB2a31339c'\nconst abi = new utils.Interface(ERC20Interface)\nconst soldierContract = new Contract(soldierAddress, abi)\nconst TransSoldier = (account,balance) => { \n  const { send } = useContractFunction(soldierContract, 'transfer')\n  const [Amount, setAmount] = useState(\"\");\n  const [Receiver , setReceiver] = useState(\"\");\n  const sendTransfer = (recipient,amount) => {\n    amount = amount*1e18\n    if(amount <= account.balance){\n      send(recipient,amount.toString())\n    }\n  }\n\n  return <div className=\"row g-3\">\n    <div class=\"col-auto\">\n      <input  className=\"form-control\" id=\"InputSoldierAmount\" type=\"number\"  placeholder=\"Amount\" onChange={e => setAmount(e.target.value)} ></input>\n    </div>\n    <div class=\"col-auto\">\n      <input  className=\"form-control\" id=\"SendSoldierAddress\" type=\"text\"   placeholder=\"Receiver address\" onChange={e => setReceiver(e.target.value)} ></input>\n    </div>\n    <div class=\"col-auto\">\n      {account && <button className=\"btn btn-success mb-3\" onClick={() => sendTransfer(Receiver,Amount)}>Transfer</button>}\n    </div>\n  </div>\n    \n}\nexport default TransSoldier;\n","import logo from './logo.svg';\nimport './App.css';\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { useEtherBalance, useEthers, useSendTransaction ,useTokenBalance,useContractFunction} from '@usedapp/core';\nimport { formatEther,formatUnits} from '@ethersproject/units'\nimport ERC20Interface from './tokenAbi.json';\nimport { useCallback } from 'react';\nimport { utils } from 'ethers'\nimport { Contract } from '@ethersproject/contracts'\nimport Mintking from \"./mintKing\"\nimport MintSoldier from \"./mintSoldier\"\nimport TransferKing from  \"./transferKing\"\nimport TransferSoldier from  \"./transferSoldier\"\nfunction DisplayKing(amount) {\n  unityContext.send(\"Main Camera\", \"DisplayKing\", amount);\n}\n\nfunction DisplaySoldier(amount) {\n  unityContext.send(\"Main Camera\", \"DisplaySoldier\", amount);\n}\n\nconst unityContext = new UnityContext({\n  loaderUrl: \"Build/unity.loader.js\",\n  dataUrl: \"Build/unity.data\",\n  frameworkUrl: \"Build/unity.framework.js\",\n  codeUrl: \"Build/unity.wasm\",\n});\nconst kingAddress = '0xC19Dd8094B73999dB263b27474127E990ccC03e6'\nconst soldierAddress = '0xC31Fe56810809199B28384e9E6bFfcbB2a31339c'\nconst App = () => { \n  const { activateBrowserWallet, account } = useEthers()\n\n  const kingBalance = useTokenBalance(kingAddress, account)\n  const soldierBalance = useTokenBalance(soldierAddress, account)\n\nreturn <div>\n    <div>\n      <div className=\"card py-4\">\n        <h1 className=\"text-center\">Warrior pigs tokens</h1>\n        <p className=\"text-center\">this demo use <a href=\"https://usedapp.readthedocs.io/en/latest/\" target=\"_blank\">usedapp</a>\n        to connect to the wallet get the balance of tokens and mint new tokens and transfer </p>\n        <p className=\"text-center\">Every token are displayed in the unity</p>\n        <p className=\"text-center\"><a href=\"https://github.com/lucasespinosa28/pigstoken\" target=\"_blank\">Source code</a></p>\n        <div>\n          {!account && <button className=\"btn btn-info\" onClick={() => {\n            activateBrowserWallet(); \n            }}>Connect</button>}  \n        </div>\n    {account && kingBalance && DisplayKing(parseInt(formatUnits(kingBalance,18)))}\n    {account && soldierBalance && DisplaySoldier(parseInt(formatUnits(soldierBalance,18)))}\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          {account && <Mintking account={account}/>}\n          {account && kingBalance && <TransferKing account={account} balance={kingBalance.toString()}/>}\n        </div>\n        <div class=\"col\">\n          {account && <MintSoldier account={account}/>}\n          {account && soldierBalance && <TransferSoldier account={account} balance={soldierBalance.toString()}/>}\n        </div>\n      </div>\n    </div>\n    </div>\n    </div>\n    <div>\n      </div>\n    <div>\n      <Unity unityContext={unityContext} />\n    </div>\n  </div>\n    \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChainId, Config, DAppProvider } from '@usedapp/core';\n\nconst config = {\n  readOnlyChainId: ChainId.Kovan,\n  readOnlyUrls: {\n    [ChainId.Kovan]: 'https://kovan.infura.io/v3/ee20058d36674d109fd4d0df4e5e1112',\n  },\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}